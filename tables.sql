.mode column
.headers on
.changes on

BEGIN;

PRAGMA foreign_keys = ON; -- enable fk constraints

-- SECTION JURISDICTION

CREATE TABLE JURISDICTION (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'), -- because I believe in strong type checking
	STATE 
		TEXT
		NOT NULL
		CHECK(TYPEOF(STATE) LIKE 'TEXT'),
	COUNTY 
		TEXT
		NOT NULL
		CHECK(TYPEOF(COUNTY) LIKE 'TEXT'),
	CITY 
		TEXT
		NOT NULL
		CHECK(TYPEOF(CITY) LIKE 'TEXT'),
	ADDITIONAL 
		TEXT
		CHECK(TYPEOF(ADDITIONAL) LIKE 'TEXT')
);

-- SECTION LOCATION

CREATE TABLE LOCATION (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	ADDR_LINE_1 
		TEXT
		NOT NULL
		CHECK(TYPEOF(ADDR_LINE_1) LIKE 'TEXT'),
	ADDR_LINE_2
		TEXT
		CHECK(TYPEOF(ADDR_LINE_2) LIKE 'TEXT'),
	STATE
		TEXT
		NOT NULL
		CHECK(TYPEOF(STATE) LIKE 'TEXT'),
	CITY
		TEXT
		NOT NULL
		CHECK(TYPEOF(CITY) LIKE 'TEXT'),
	ZIP_CODE
		TEXT
		NOT NULL
		CHECK(TYPEOF(ZIP_CODE) LIKE 'TEXT')
);

CREATE TABLE MANUFACTURER (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	NAME 
		TEXT
		NOT NULL
		CHECK(TYPEOF(NAME) LIKE 'TEXT'),
	RELIABILITY
		INTEGER
		CHECK(TYPEOF(RELIABILITY) LIKE 'INTEGER')
);

-- SECTION SCHEDULE

CREATE TABLE SCHEDULE (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	M_START_HR 
		INT2
		CHECK(TYPEOF(M_START_HR) LIKE 'INTEGER'),
	M_END_HR 
		INT2
		CHECK(TYPEOF(M_END_HR) LIKE 'INTEGER'),
	T_START_HR 
		INT2
		CHECK(TYPEOF(T_START_HR) LIKE 'INTEGER'),
	T_END_HR 
		INT2
		CHECK(TYPEOF(T_END_HR) LIKE 'INTEGER'),
	W_START_HR 
		INT2
		CHECK(TYPEOF(W_START_HR) LIKE 'INTEGER'),
	W_END_HR 
		INT2
		CHECK(TYPEOF(W_END_HR) LIKE 'INTEGER'),
	TH_START_HR 
		INT2
		CHECK(TYPEOF(TH_START_HR) LIKE 'INTEGER'),
	TH_END_HR
		INT2
		CHECK(TYPEOF(TH_END_HR) LIKE 'INTEGER'),
	F_START_HR 
		INT2
		CHECK(TYPEOF(F_START_HR) LIKE 'INTEGER'),
	F_END_HR 
		INT2
		CHECK(TYPEOF(F_END_HR) LIKE 'INTEGER'),
	S_START_HR 
		INT2
		CHECK(TYPEOF(S_START_HR) LIKE 'INTEGER'),
	S_END_HR 
		INT2
		CHECK(TYPEOF(S_END_HR) LIKE 'INTEGER')
);

-- SECTION JOB_POSITION

CREATE TABLE JOB_POSITION (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	NAME 
		TEXT
		NOT NULL
		CHECK(TYPEOF(NAME) LIKE 'TEXT'),
	DESCRIPTION 
		TEXT
		CHECK(TYPEOF(DESCRIPTION) LIKE 'TEXT')
);

-- SECTION PRODUCT_CATEGORY

CREATE TABLE PRODUCT_CATEGORY (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	NAME 
		TEXT
		NOT NULL
		CHECK(TYPEOF(NAME) LIKE 'TEXT'),
	DESCRIPTION 
		TEXT
		CHECK(TYPEOF(DESCRIPTION) LIKE 'TEXT')
);

-- SECTION PRODUCT_CAPACITY_RESTRICTION

CREATE TABLE PRODUCT_TYPE (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	MANUFACTURER_ID 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(MANUFACTURER_ID) LIKE 'INTEGER'),
	PRODUCT_CATEGORY_ID 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(PRODUCT_CATEGORY_ID) LIKE 'INTEGER'),
	NAME 
		TEXT
		NOT NULL
		CHECK(TYPEOF(NAME) LIKE 'TEXT'),
	DESCRIPTION 
		TEXT
		CHECK(TYPEOF(DESCRIPTION) LIKE 'TEXT'),
	DEMAND_INDEX
		INTEGER
		CHECK(TYPEOF(DEMAND_INDEX) LIKE 'INTEGER'),

	FOREIGN KEY(MANUFACTURER_ID) REFERENCES MANUFACTURER(ID) ON DELETE CASCADE,
	FOREIGN KEY(PRODUCT_CATEGORY_ID) REFERENCES PRODUCT_CATEGORY(ID) ON DELETE CASCADE
);

-- REGULATION

CREATE TABLE REGULATION (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	JURISDICTION_ID 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(JURISDICTION_ID) LIKE 'INTEGER'),
	LEGAL_CODE 
		TEXT
		NOT NULL
		CHECK(TYPEOF(LEGAL_CODE) LIKE 'TEXT'),
	AUTHORING_BODY 
		TEXT
		NOT NULL
		CHECK(TYPEOF(AUTHORING_BODY) LIKE 'TEXT'),

	FOREIGN KEY(JURISDICTION_ID) REFERENCES JURISDICTION(ID) ON DELETE CASCADE
);

-- SECTION PURCHASER

CREATE TABLE PURCHASER (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	JURISDICTION_ID 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(JURISDICTION_ID) LIKE 'INTEGER'),
	NAME 
		TEXT
		NOT NULL
		CHECK(TYPEOF(NAME) LIKE 'TEXT'),
	KIND 
		TEXT
		NOT NULL
		CHECK(TYPEOF(KIND) LIKE 'TEXT'),
	TELEPHONE 
		TEXT
		NOT NULL
		CHECK(TYPEOF(TELEPHONE) LIKE 'TEXT'),
	NRA_NUMBER 
		TEXT
		CHECK(TYPEOF(NRA_NUMBER) LIKE 'TEXT'),
	DLN_NUMBER 
		TEXT
		CHECK(TYPEOF(DLN_NUMBER) LIKE 'TEXT'),
	ATF_NUMBER 
		TEXT
		CHECK(TYPEOF(DLN_NUMBER) LIKE 'TEXT'),

	FOREIGN KEY(JURISDICTION_ID) REFERENCES JURISDICTION(ID) ON DELETE CASCADE
);

-- SECTION SELLER

CREATE TABLE SELLER (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	JURISDICTION_ID 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(JURISDICTION_ID) LIKE 'INTEGER'),
	NAME 
		TEXT
		NOT NULL
		CHECK(TYPEOF(NAME) LIKE 'TEXT'),
	RELIABILITY 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(RELIABILITY) LIKE 'INTEGER'),

	FOREIGN KEY(JURISDICTION_ID) REFERENCES JURISDICTION(ID) ON DELETE CASCADE
);

-- SECTION OFFICE

CREATE TABLE OFFICE (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	LOCATION_ID 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(LOCATION_ID) LIKE 'INTEGER'),
	JURISDICTION_ID 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(JURISDICTION_ID) LIKE 'INTEGER'),

	FOREIGN KEY(JURISDICTION_ID) REFERENCES JURISDICTION(ID) ON DELETE CASCADE
	FOREIGN KEY(LOCATION_ID) REFERENCES LOCATION(ID) ON DELETE CASCADE
);


CREATE TABLE EMPLOYEE (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	NAME 
		TEXT
		NOT NULL
		CHECK(TYPEOF(NAME) LIKE 'TEXT'),
	SSN 
		TEXT
		NOT NULL
		CHECK(TYPEOF(SSN) LIKE 'TEXT'),
	DOB 
		TEXT
		NOT NULL
		CHECK(TYPEOF(DOB) LIKE 'TEXT'),
	SALARY 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(SALARY) LIKE 'INTEGER'),

	OFFICE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(OFFICE_ID) LIKE 'INTEGER'),
	SCHEDULE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(SCHEDULE_ID) LIKE 'INTEGER'),
	JOB_POSITION_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(OFFICE_ID) LIKE 'INTEGER'),
	LOCATION_ID 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(LOCATION_ID) LIKE 'INTEGER'),
	JURISDICTION_ID 
		INTEGER
		NOT NULL
		CHECK(TYPEOF(JURISDICTION_ID) LIKE 'INTEGER'),

	FOREIGN KEY(OFFICE_ID) REFERENCES OFFICE(ID) ON DELETE CASCADE,
	FOREIGN KEY(JOB_POSITION_ID) REFERENCES JOB_POSITION(ID) ON DELETE CASCADE,
	FOREIGN KEY(LOCATION_ID) REFERENCES LOCATION(ID) ON DELETE CASCADE,
	FOREIGN KEY(JURISDICTION_ID) REFERENCES JURISDICTION(ID) ON DELETE CASCADE,
	FOREIGN KEY(SCHEDULE_ID) REFERENCES SCHEDULE(ID) ON DELETE CASCADE
);

-- SECTION PRODUCT_REGULATION

CREATE TABLE PRODUCT_REGULATION (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	PRODUCT_CATEGORY_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(PRODUCT_CATEGORY_ID) LIKE 'INTEGER'),
	REGULATION_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(REGULATION_ID) LIKE 'INTEGER'),

	FOREIGN KEY(PRODUCT_CATEGORY_ID) REFERENCES PRODUCT_CATEGORY(ID) ON DELETE CASCADE,
	FOREIGN KEY(REGULATION_ID) REFERENCES REGULATION(ID) ON DELETE CASCADE
);

-- SECTION WAREHOUSE

CREATE TABLE WAREHOUSE (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	OFFICE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(OFFICE_ID) LIKE 'INTEGER'),
	SIZE_TYPE
		TEXT
		NOT NULL
		CHECK(TYPEOF(SIZE_TYPE) LIKE 'TEXT'),

	FOREIGN KEY(OFFICE_ID) REFERENCES OFFICE(ID) ON DELETE CASCADE
);

-- SECTION MANAGER

CREATE TABLE MANAGER (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
    NOTES
        TEXT
		CHECK(TYPEOF(NOTES) LIKE 'TEXT'),
	EMPLOYEE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(EMPLOYEE_ID) LIKE 'INTEGER'),
	AUTHORITY_LEVEL
		TEXT
		NOT NULL
		CHECK(TYPEOF(AUTHORITY_LEVEL) LIKE 'TEXT'),

	FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(ID) ON DELETE CASCADE
);

-- SECTION MANAGEMENT

CREATE TABLE MANAGEMENT (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	MANAGER_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(MANAGER_ID) LIKE 'INTEGER'),
	EMPLOYEE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(EMPLOYEE_ID) LIKE 'INTEGER'),
	FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(ID) ON DELETE CASCADE,
	FOREIGN KEY(MANAGER_ID) REFERENCES MANAGER(ID) ON DELETE CASCADE
);

-- SECTION NEGOTIATER

CREATE TABLE NEGOTIATER (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	EMPLOYEE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(EMPLOYEE_ID) LIKE 'INTEGER'),
    FAVORIBILITY
        TEXT
        NOT NULL
		CHECK(TYPEOF(FAVORIBILITY) LIKE 'TEXT'),
    NOTES
        TEXT
		CHECK(TYPEOF(NOTES) LIKE 'TEXT'),
	FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(ID) ON DELETE CASCADE
);

-- SECTION SALES_CONTRACT

CREATE TABLE SALES_CONTRACT (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	PURCHASER_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(PURCHASER_ID) LIKE 'INTEGER'),
	JURISDICTION_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(JURISDICTION_ID) LIKE 'INTEGER'),
	NEGOTIATER_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(NEGOTIATER_ID) LIKE 'INTEGER'),
	MANAGER_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(MANAGER_ID) LIKE 'INTEGER'),
    GRAND_TOTAL
        INTEGER
		NOT NULL
		CHECK(TYPEOF(GRAND_TOTAL) LIKE 'INTEGER'),
    DATE
        INTEGER
		NOT NULL
		CHECK(TYPEOF(GRAND_TOTAL) LIKE 'INTEGER'), -- unix time
	FOREIGN KEY(PURCHASER_ID) REFERENCES PURCHASER(ID) ON DELETE CASCADE,
	FOREIGN KEY(JURISDICTION_ID) REFERENCES JURISDICTION(ID) ON DELETE CASCADE,
	FOREIGN KEY(NEGOTIATER_ID) REFERENCES NEGOTIATER(ID) ON DELETE CASCADE,
	FOREIGN KEY(MANAGER_ID) REFERENCES MANAGER(ID) ON DELETE CASCADE
);

-- SECTION ACQUISITION_CONTRACT

CREATE TABLE ACQUISITION_CONTRACT (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	PURCHASER_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(PURCHASER_ID) LIKE 'INTEGER'),
	JURISDICTION_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(JURISDICTION_ID) LIKE 'INTEGER'),
	NEGOTIATER_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(NEGOTIATER_ID) LIKE 'INTEGER'),
	MANAGER_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(MANAGER_ID) LIKE 'INTEGER'),
    GRAND_TOTAL
        INTEGER
		NOT NULL
		CHECK(TYPEOF(GRAND_TOTAL) LIKE 'INTEGER'),
    DATE
        INTEGER
		NOT NULL
		CHECK(TYPEOF(GRAND_TOTAL) LIKE 'INTEGER'), -- unix time
	FOREIGN KEY(PURCHASER_ID) REFERENCES PURCHASER(ID) ON DELETE CASCADE,
	FOREIGN KEY(JURISDICTION_ID) REFERENCES JURISDICTION(ID) ON DELETE CASCADE,
	FOREIGN KEY(NEGOTIATER_ID) REFERENCES NEGOTIATER(ID) ON DELETE CASCADE,
	FOREIGN KEY(MANAGER_ID) REFERENCES MANAGER(ID) ON DELETE CASCADE
);

-- SECTION PRODUCT

CREATE TABLE PRODUCT (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	ACQUISITION_CONTRACT_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(ACQUISITION_CONTRACT_ID) LIKE 'INTEGER'),
	SALES_CONTRACT_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(SALES_CONTRACT_ID) LIKE 'INTEGER'),
	WAREHOUSE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(WAREHOUSE_ID) LIKE 'INTEGER'),
	PRODUCT_TYPE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(PRODUCT_TYPE_ID) LIKE 'INTEGER'),
    SERIAL_NUMBER
        TEXT
		NOT NULL
		CHECK(TYPEOF(SERIAL_NUMBER) LIKE 'TEXT'),
	FOREIGN KEY(ACQUISITION_CONTRACT_ID) REFERENCES ACQUISITION_CONTRACT(ID) ON DELETE CASCADE,
	FOREIGN KEY(SALES_CONTRACT_ID) REFERENCES SALES_CONTRACT(ID) ON DELETE CASCADE,
	FOREIGN KEY(WAREHOUSE_ID) REFERENCES WAREHOUSE(ID) ON DELETE CASCADE,
	FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PRODUCT_TYPE(ID) ON DELETE CASCADE
);

-- SECTION TRANSFER

CREATE TABLE TRANSFER (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	WAREHOUSE_ORIGIN_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(WAREHOUSE_ORIGIN_ID) LIKE 'INTEGER'),
	WAREHOUSE_DESTINATION_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(WAREHOUSE_DESTINATION_ID) LIKE 'INTEGER'),
	PRODUCT_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(PRODUCT_ID) LIKE 'INTEGER'),
	MANAGER_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(MANAGER_ID) LIKE 'INTEGER'),
    DATE
        INTEGER
		NOT NULL
		CHECK(TYPEOF(DATE) LIKE 'INTEGER'),
	FOREIGN KEY(WAREHOUSE_ORIGIN_ID) REFERENCES WAREHOUSE(ID) ON DELETE CASCADE,
	FOREIGN KEY(WAREHOUSE_DESTINATION_ID) REFERENCES WAREHOUSE(ID) ON DELETE CASCADE,
	FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCT(ID) ON DELETE CASCADE,
	FOREIGN KEY(MANAGER_ID) REFERENCES MANAGER(ID) ON DELETE CASCADE
);


--SECTION PRODUCT_CAPACITY

CREATE TABLE PRODUCT_CAPACITY (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	WAREHOUSE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(WAREHOUSE_ID) LIKE 'INTEGER'),
	PRODUCT_TYPE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(PRODUCT_TYPE_ID) LIKE 'INTEGER'),
	FOREIGN KEY(WAREHOUSE_ID) REFERENCES WAREHOUSE(ID) ON DELETE CASCADE,
	FOREIGN KEY(PRODUCT_TYPE_ID) REFERENCES PRODUCT_TYPE(ID) ON DELETE CASCADE
);

-- SECTION PRODUCT_CAPACITY_RESTRICTION

CREATE TABLE PRODUCT_CAPACITY_RESTRICTION (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
    PRODUCT_CAPACITY_ID
        INTEGER
        NOT NULL
		CHECK(TYPEOF(PRODUCT_CAPACITY_ID) LIKE 'INTEGER'),
    MAX_CAPACITY
        INTEGER
        NOT NULL
		CHECK(TYPEOF(MAX_CAPACITY) LIKE 'INTEGER'),
    RESTRICTIONS
        TEXT
		CHECK(TYPEOF(RESTRICTIONS) LIKE 'TEXT'),
	FOREIGN KEY(PRODUCT_CAPACITY_ID) REFERENCES PRODUCT_CAPACITY(ID) ON DELETE CASCADE
);

-- SECTION EMPLOYEE_CHANGE

CREATE TABLE EMPLOYEE_CHANGE (
	ID INTEGER 
		PRIMARY KEY 
		AUTOINCREMENT
		NOT NULL
		CHECK(TYPEOF(ID) LIKE 'INTEGER'),
	EMPLOYEE_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(EMPLOYEE_ID) LIKE 'INTEGER'),
	MANAGER_ID
		INTEGER
		NOT NULL
		CHECK(TYPEOF(MANAGER_ID) LIKE 'INTEGER'),
	DATE
		INTEGER
		NOT NULL
		CHECK(TYPEOF(DATE) LIKE 'INTEGER'),
	KIND
		INTEGER
		NOT NULL
		CHECK(TYPEOF(KIND) LIKE 'TEXT' AND (KIND IS 'HIRE' OR KIND IS 'FIRE' OR KIND IS 'SUSPEND')),
	FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(ID) ON DELETE CASCADE
	FOREIGN KEY(MANAGER_ID) REFERENCES MANAGER(ID) ON DELETE CASCADE
);